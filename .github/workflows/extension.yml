name: Browser Extension

on:
  push:
    branches: ['main']
    paths: [
      "extension/**",
      ".github/workflows/extension.yml"
    ]


jobs:
  ci-cd:

    name: ci/cd pipeline for browser extension
    runs-on: ubuntu-latest
    environment: Extension
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: install dependencies
        working-directory: ./extension
        run: yarn install
      - name: run unit tests
        working-directory: ./extension
        run: yarn test

        # deployment steps for beta extension
        # commented out while beta site awaits approval
        # ---
        #
        # TODO: continue-on-error is set to true for all the upload steps.
        # The upload script will fail if a previous version is still pending
        # review on the chrome web store. This behavior weakens our continuous
        # deployment, and it's probably not the wisest way to handle this
        # situation.

      # - name: Build beta extension
      #   working-directory: ./extension
      #   env:
      #     DEPLOY_TARGET: beta
      #   run: yarn build

      # - name: upload production extension to web store
      #   continue-on-error: true
      #   env:
      #     DEPLOY_TARGET: beta
      #     UPLOAD_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID}}
      #     UPLOAD_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      #     UPLOAD_REFRESH_TOKEN: ${{ secrets.OAUTH_REFRESH_TOKEN }}
      #   run: yarn upload

        # deployment steps for production extension
        # the following production steps only run on tagged commits
        # ---
      - name: Build production extension
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        working-directory: ./extension
        env:
          DEPLOY_TARGET: prod
        run: yarn build

      - name: upload production extension to web store
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags'
        continue-on-error: true
        working-directory: ./extension
        env:
          DEPLOY_TARGET: prod
          UPLOAD_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID}}
          UPLOAD_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          UPLOAD_REFRESH_TOKEN: ${{ secrets.OAUTH_REFRESH_TOKEN }}
        run: yarn upload
